import { WebServer } from '.';
interface InputConfig {
    type: 'text' | 'password' | 'number' | 'select' | 'checkbox' | 'textarea' | 'custom';
    id: string;
    name: string;
    custom?: string;
    options?: {
        placeholder?: string;
        value?: string;
        class?: string[];
        id?: string;
        seletions?: {
            text: string;
            value: string;
        }[];
    };
}
export declare class WebForm {
    private web;
    private router;
    private config;
    private submit?;
    id: string;
    constructor(web: WebServer, id: string);
    /**
     * @description 添加文本显示
     * @param text 文本内容
     * @param styles css样式(不需要加分号)
     */
    addText(text: string, styles?: string[]): void;
    /**
     * @description 添加自定义html(此方法会尝试读取id对应标签的value属性并返回给后端)
     */
    addCustomCode(html: string, id: string): void;
    /**
     * @description 添加一个输入框
     * @param id 字段id
     * @param type 输入框的类型
     * @param name 输入提示
     * @param options 输入框的选项
     */
    addInput(id: string, type: InputConfig['type'], name: string, options?: InputConfig['options']): void;
    /**
     * @description 添加iframe页面
     * @param url iframe的url
     */
    addIframe(url: string): void;
    /**
     * @description 表单提交后的回调函数
     * @param callback 回调函数，返回值为错误信息，若返回值为 undefined 则表示没有错误
     */
    onSubmitted(callback: (data: any) => Promise<string | undefined> | string | undefined): void;
    _destroy(): void;
}
export {};
