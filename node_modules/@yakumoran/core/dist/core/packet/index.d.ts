import encodeAdminMediaClear from './encoder/admin/media/clear';
import encodeAdminMediaCut from './encoder/admin/media/cut';
import encodeAdminMediaExchange from './encoder/admin/media/exchange';
import encodeAdminMediaGoto from './encoder/admin/media/goto';
import encodeAdminMediaOperation from './encoder/admin/media/operation';
import encodeAdminBlacklist from './encoder/admin/blacklist';
import encodeAdminKick from './encoder/admin/kick';
import encodeAdminMute from './encoder/admin/mute';
import encodeAdminNotice from './encoder/admin/notice';
import encodeAdminSetMaxUser from './encoder/admin/setMaxUser';
import encodeAdminWhitelist from './encoder/admin/whitelist';
import encodeMessageDamaku from './encoder/messages/damaku';
import encodeMessageMediaCard from './encoder/messages/MediaCard';
import encodeMessageMediaData from './encoder/messages/MediaData';
import encodeMessagePrivateMessage from './encoder/messages/PrivateMessage';
import encodeMessagePublicMessage from './encoder/messages/PublicMessage';
import encodeSystemBank from './encoder/system/bank';
import encodeSystemGetUserList from './encoder/system/GetUserList';
import encodeSystemLike from './encoder/system/like';
import encodeSystemLogin from './encoder/system/login';
import encodeSystemMediaList from './encoder/system/MediaList';
import encodeSystemPayment from './encoder/system/payment';
import encodeUserProfile from './encoder/user/UserProfile';
export declare class Encoder {
    admin: {
        media: {
            clear: typeof encodeAdminMediaClear;
            cut: typeof encodeAdminMediaCut;
            exchange: typeof encodeAdminMediaExchange;
            goto: typeof encodeAdminMediaGoto;
            operation: typeof encodeAdminMediaOperation;
        };
        blacklist: typeof encodeAdminBlacklist;
        kick: typeof encodeAdminKick;
        mute: typeof encodeAdminMute;
        notice: typeof encodeAdminNotice;
        setMaxUser: typeof encodeAdminSetMaxUser;
        whitelist: typeof encodeAdminWhitelist;
    };
    messages: {
        damaku: typeof encodeMessageDamaku;
        mediaCard: typeof encodeMessageMediaCard;
        mediaData: typeof encodeMessageMediaData;
        privateMessage: typeof encodeMessagePrivateMessage;
        publicMessage: typeof encodeMessagePublicMessage;
    };
    system: {
        bank: typeof encodeSystemBank;
        getUserList: typeof encodeSystemGetUserList;
        like: typeof encodeSystemLike;
        login: typeof encodeSystemLogin;
        mediaList: typeof encodeSystemMediaList;
        payment: typeof encodeSystemPayment;
    };
    user: {
        userProfile: typeof encodeUserProfile;
    };
    constructor();
}
export declare class Decoder {
    private decoder;
    constructor();
    autoDecoder(packet: string): false | [string, any][];
}
